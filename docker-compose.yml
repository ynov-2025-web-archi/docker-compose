version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: ecommerce_postgres
    environment:
      POSTGRES_USER: vincent
      POSTGRES_PASSWORD: vincent
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks :
      - ecommerce_network

  mongodb:
    image: mongo:latest
    container_name: ecommerce_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: vincent
      MONGO_INITDB_ROOT_PASSWORD: vincent
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce_network

  redis:
    image: redis:latest
    container_name: ecommerce_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce_network

  products-api: 
    build: 
      context: ../ecommerce_apis/products-api
      dockerfile: Dockerfile
    container_name: products_api
    environment:
      DATABASE_URL: postgres://vincent:vincent@postgres:5432/ecommerce
      PORT: 3030
    ports:
      - "3030:3030"
    depends_on:
      - postgres
    networks:
      - ecommerce_network

  newsletter-api: 
    build: 
      context: ../ecommerce_apis/newsletter-api
      dockerfile: Dockerfile
    container_name: newsletter_api
    environment:
      MONGODB_URI: mongodb://vincent:vincent@mongodb:27017/newsletter?authSource=admin
      PORT: 3031
    ports:
      - "3031:3031"
    depends_on:
      - mongodb
    networks:
      - ecommerce_network

  search-api:
    build:
      context: ../ecommerce_apis/search-api
      dockerfile: Dockerfile
    container_name: search_api
    environment:
      DATABASE_URL: postgres://vincent:vincent@postgres:5432/ecommerce
      REDIS_URL: redis://redis:6379
      PORT: 3032
    ports:
      - "3032:3032"
    depends_on:
      - postgres
    networks:
      - ecommerce_network

  gateway:
    build: 
      context: ../ecommerce_apis/gateway-proxy
      dockerfile: Dockerfile
    container_name: ecommerce_gateway
    environment:
      PRODUCTS_SERVICE_URL: http://products-api:3030
      NEWSLETTER_SERVICE_URL: http://newsletter-api:3031
      SEARCH_SERVICE_URL: http://search-api:3032
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      - products-api
      - newsletter-api
      - search-api
    networks:
      - ecommerce_network

  brevo-serverless:
    build:
      context: ../ecommerce_apis/brevo-serverless/
      dockerfile: Dockerfile
    container_name: brevo_serverless
    environment:
      BREVO_API_KEY: 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
    ports:
      - "9000:8080"
    depends_on:
      - gateway

  frontend:
    build: 
      context: ../ecommerce_front/front
      dockerfile: Dockerfile
    container_name: ecommerce_frontend
    environment:
      API_GATEWAY_URL: http://gateway:4000
    ports:
      - "3000:3000"
    depends_on:
      - gateway
    networks:
      - ecommerce_network 

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  ecommerce_network:
    driver: bridge